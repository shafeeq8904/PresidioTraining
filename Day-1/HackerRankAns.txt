Question 1:
https://www.hackerrank.com/challenges/plus-minus/problem?isFullScreen=true

Ans:


void plusMinus(const vector<int>& arr) {
    int n = arr.size();
    int pos = 0, neg = 0, zero = 0;

    for (int i = 0; i < n; ++i) {
    int num = arr[i]; 
    if (num > 0) pos++;
    else if (num < 0) neg++;
    else zero++;
}

    printf("%.6f\n", static_cast<double>(pos) / n);
    printf("%.6f\n", static_cast<double>(neg) / n);
    printf("%.6f\n", static_cast<double>(zero) / n);
    
}

Question 2:
https://www.hackerrank.com/challenges/staircase/problem?isFullScreen=true
Ans:
class Result
{
    public static void staircase(int n)
    {
        for(int i=1;i<= n;i++)
        {
            for(int j=0;j<n-i;j++)
            {
                Console.Write(" ");
            }
            
            for (int k = 0; k < i; k++)
            {
                Console.Write("#");
            }
            Console.WriteLine();
        }

    }

}


Question 3:
https://www.hackerrank.com/challenges/mini-max-sum/problem?isFullScreen=true

Ans:
class Result
{
 public static void miniMaxSum(List<int> arr)
    {
        arr.Sort();
        long sum = arr.Select(i => (long)i).Sum();
        long min=0,max=0;
        if(arr.Count()>=2){
            min = sum-arr[arr.Count()-1];
            max = sum-arr[0];
        }
        if(arr.Count()==1)
        {
            min = arr[0];
            max = arr[0];
        }
        
        Console.WriteLine($"{min} {max}");
        
    }

}

Question : 4
https://www.hackerrank.com/challenges/birthday-cake-candles/problem?isFullScreen=true

Ans:
class Result
{
    public static int birthdayCakeCandles(List<int> candles)
    {
        int maxHeight = candles.Max();
        int count = candles.Count(candle => candle==maxHeight );
        return count;
    }

}

Question 5:
https://www.hackerrank.com/challenges/time-conversion/problem?isFullScreen=true

Ans:
class Result
{
    public static string timeConversion(string s)
    {
        
        string period = s.Substring(s.Length - 2);
        string hour = s.Substring(0, 2);
        string minuteSecond = s.Substring(2, 6);

        int hourInt = int.Parse(hour);

        if (period == "AM")
        {
            
            if (hourInt == 12)
            {
                hour = "00";
            }
        }
        else 
        {
            
            if (hourInt != 12)
            {
                hourInt += 12;  
                hour = hourInt.ToString("D2");
            }
        }

        
        return hour + minuteSecond;
    }
}

Question 6:
https://www.hackerrank.com/challenges/grading/problem?isFullScreen=true

Ans:
class Result
{
    public static List<int> gradingStudents(List<int> grades)
    {
        List<int> result = new List<int>();

        foreach (int grade in grades)
        {
            if (grade < 38)
            {
                result.Add(grade);
            }
            else
            {
                int nextMultipleOf5 = ((grade / 5) + 1) * 5;
                if (nextMultipleOf5 - grade < 3)
                    result.Add(nextMultipleOf5);
                else
                    result.Add(grade);
            }
        }

        return result;
    }
}

Question 7:
https://www.hackerrank.com/challenges/apple-and-orange/problem?isFullScreen=true

Ans:
class Result
{
    public static void countApplesAndOranges(int s, int t, int a, int b, List<int> apples, List<int> oranges)
    {
        int countApples = 0;
        int countOranges = 0;

        foreach (int apple in apples)
        {
            int landingPoint = a + apple;
            if (landingPoint >= s && landingPoint <= t)
                countApples++;
        }

        foreach (int orange in oranges)
        {
            int landingPoint = b + orange;
            if (landingPoint >= s && landingPoint <= t)
                countOranges++;
        }

        Console.WriteLine(countApples);
        Console.WriteLine(countOranges);
    }
}

Question 8:
https://www.hackerrank.com/challenges/kangaroo/problem?isFullScreen=true

 Ans:
 class Result
{

    

    public static string kangaroo(int x1, int v1, int x2, int v2)
    {
        string result = "NO";
        if (v1 <= v2)
        {
            return result;
        }
        if ((x2 - x1) % (v1 - v2) == 0)
        {
            result = "YES";
        }
        return result;
    }

}

Question 9:
https://www.hackerrank.com/challenges/between-two-sets/problem?isFullScreen=true

Ans:
class Result
{

    
    public static int getTotalX(List<int> a, List<int> b)
    {
        var lastA = a.Last();
         var lastB = b.Last();
         var count = 0;
         for(var i = lastA; i <= lastB; i++){
             var af = a.All(e => i % e == 0);
             var bf = b.All(e => e % i == 0);
             if(af && bf) count++;
     }
         return count;
    }

}

Question 10:
https://www.hackerrank.com/challenges/breaking-best-and-worst-records/problem?isFullScreen=true

Ans:
class Result
{


    public static List<int> breakingRecords(List<int> scores)
    {
        int bestBreaks = 0;
        int worstBreaks = 0;

        int maxScore = scores[0];
        int minScore = scores[0];
        
        for (int i = 1; i < scores.Count; i++)
        {
            if (scores[i] > maxScore)
            {
                maxScore = scores[i];
                bestBreaks++; 
            }

            if (scores[i] < minScore)
            {
                minScore = scores[i]; 
                worstBreaks++; 
            }
        }
        
        return new List<int> { bestBreaks, worstBreaks };
    }
}


